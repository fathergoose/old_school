08-difference-between.txt

Is something I have contemplated a lot in the past months. As a child, I asked to get a chemistry set for Christmas, declared chemistry as my major as soon as possible, and spent the last four years doing product development for a chemical start-up. However, as I moved from the study of chemistry to the practice of chemistry, my affection for it began to wain. At the same time, I began reading up on electronics and eventually, a little computer science. My interest in electronics and computers grew to be much greater than any interest I ever had in chemistry. I began to wonder what was different about computers that kept me coming back for more and more information every chance I got. The difference was people. 

People write software and the gods write chemistry. Chemistry is always a bit of hack and predicting the behavior of chemicals is like predicting the weather. There are trends, models, but the system under study is too complex to be fully understood. Such is the case with chemistry, where theory must always answer to experimentation. 

Experimentation is not walk in the park. A hypothesis can get you into the lab, but only a great deal of failures will ever lead you out. I compare the process of scientific discovery to mining gold. When mining gold, most of the effort is spent digging dirt. This process is not for the feint of heart or those less gifted in the art of long suffering. 

Software isn’t discovered, it is built, engineered, developed, and written. Studying computers and software is the study of systems designed by humans. These human authors present their own sets of challenges, but they are challenges in which I am excited to engage. The ability to study the designs of others is something that compels me to a much greater degree. To me, there is something less exciting about the fact that the natural world is and always was aside from any understanding thereof. If everyone wakes up tomorrow having forgotten everything they ever knew about electronics, the lights would eventually go out and all the computers would be repurposed as door-stops. Chemistry wouldn’t ever know the difference. Thats okay—I never loved you anyway, Chemistry.

 Not that software development is without it’s frustrations, but they are just frustrations of a different sort. To study an engineered system is to study the work of people and be frustrated by people. However, studying the designs of otherI love objectivity, facts, and order, but I find the most exciting things in life to be people’s ideas. Where the warm and fuzzy ideas of a human meet with the cold objectivity of a computer is where I want to spend my days. 
I don’t want to spend my days chasing down molecules, I want to spend it bossing around computers.


 These verbs may be applicable to computer scientists, but maybe thats just it. I am only writing about chemistry because it is what I have the most experience with, but this is really a discussion of science vs engineering. I don’t want to be a scientist, I want to be an engineer.




#### This paragraph sucks ####
 The natural world is what it is. We are stuck with what it has given to us. Because of this, the study of the natural world through Chemistry always feels a bit like hacking. You can try to trick the molecules into doing what you want, but most of the time, it just comes down to overwhelming them. You want to know this reaction's "password"? It might help to be clever, but there usually isn't any way around trying an un-godly amount of wrong answers. I also liken the process of scientific discovery to mining gold (or bitcoins--that works too). A lot more dirt (or hashes) gets dug up than gold. Learning about chemistry resembles learning about electronics or computers, but the practice of chemistry is a different discipline altogether. //I am confused about how chemistry resembles learning about computers with your examples from above//

####   ####

It seems then that scientific discovery is all about patient observation. Software development,rather, seems more about patient communication. By this/,// I am referring to the careful reading or writing of documentation, git commits, variable names and the like. Additionally//,// communication amongst team members is critical in a way beyond what it is in the laboratory. This is because of the biggest single difference between computers and chemistry.//what is this difference? I expect a short, concrete answer after this sentence// Chemistry will always do chemistry//,// whereas the a computer is only one bent pin away from being a component in an ad hoc baby-gate (such is the duty of my once glorious powermac G4). Computers need us and they need us to work together because no one among us is capable of understanding every aspect of a moder computer, let alone come to that understanding on ones own. It may be a nice premise for a sci-fi movie to have computers take over the world, but anyone who has spent tine working with them will have their doubts.

To me this is the big difference, computers are only computers so long as they are fed electricity and instructions to compute. Every computer was made by design and every line of code has an author. //are you saying this in contrast to chemistry always being chemistry "or the natural world", even without the role of humanity? whereas computers would not exist without humanity?//

------------------------------------

 I have come to realize that the reason for this disconnect has to do with the difference between science and engineering or, per the title of this post, the difference between computers and chemistry.

It's instructive to look at the verbs we associate with working in a lab or with a computers. We write code to develop software, very few people (if any) would say they research code. However, any chemist wishing to build something new does not have the luxury of 'writing' reactions, and checking them with the push of a button. Instead, experiments are proposed and executed. Most of these experiments are merely gathering a list of things that will not work until the researcher is out of time, money, or ideas. In this respect, the process looks a bit like mining for gold. A lot more dirt gets dug up than gold. A cretin set of skills are required of a good chemist among which are patience, steady hands, and a willingness to dig up all those tons of dirt.

I don't like digging up metaphorical dirt, at least not the amount required to find gold.

Chemists must communicate because the landscape is so foreign developers must communicate because the landscape is synthetic.

The world of software development differs from the natural world explored by a scientist in that it is a world we have built for ourselves. In this self-constructed world there is a difference between code that runs and good software. Strictly learning to write code entails leaning the syntax and constructs of a given language and applying that understanding of the language to solve a problem. Leaning to write good software is more about learning to work with other people to solve a problem than leaning a language. As someone who is, at the moment, on the receiving end of software development it has been about receiving information from other developers in the form of documentation. As I advance my skills and experience I will have the opportunity to be the one who produces communication as well as consume it. Because this communication is so vital to the quality of software I can't wait until I've built complex applications to start practicing my documentation skills. So why not blog about it? Sounds like a good enough idea to me.


##Outline##

I have been thinking about chemistry
  about me
  what got me thinking

Chemistry is natural Computers are synthetic
  In chemistry, everything is a hack
    We don't know what is going on
  We dig tons of dirt
  It's not for everyone
  Also why documentation is super important

Computers are contrived and don't exist without us
  This used to turn me off
  But its super exciting b/c we are in control
    I like control
  It can get super confusing there is no end in sight
  That's why documentation is super important

The main thing that computers and chemistry have in common is that they both only as good as their documentation









